@inject NavigationManager NavigationManager
@inject ConfProgram.Services.ConferenceService ConferenceService

<div class="sidebar p-3 text-white bg-dark">
    <h5 class="mb-3">Навигация</h5>

    <ul class="menu">
        <li>
            <a class="@GetActive("/")" @onclick="@(() => NavigateTo("/"))">Главная</a>
        </li>
        <li>
            <a class="@GetActive("/program")" @onclick="@(() => NavigateTo("/program"))">Программа</a>
        </li>

        @foreach (var part in ConferenceService.Data.Parts)
        {
            <li class="dropdown">
                <span>@part.Name</span>
                <ul class="submenu">
                    @foreach (var room in part.Rooms)
                    {
                        var url = $"/room/{part.Id}?room={room.Id}";
                        <li>
                            <a class="@GetActive(url)"
                               @onclick="@(() => NavigateTo(url))">
                                @room.Title
                            </a>
                        </li>
                    }
                </ul>
            </li>
        }
    </ul>
</div>

@code {
    private async void NavigateTo(string url)
    {
        NavigationManager.NavigateTo(url);
        await Task.Delay(10); // дать Blazor обновить URI
        await InvokeAsync(StateHasChanged);
    }

    private string GetActive(string href)
    {
        var current = NavigationManager.Uri;

        // Match route ignoring domain part
        return current.Contains(href, StringComparison.OrdinalIgnoreCase) ? "active" : "";
    }

    protected override async Task OnInitializedAsync()
    {
        if (ConferenceService.Data.Parts.Count == 0)
        {
            await ConferenceService.LoadDataAsync();
        }
    }
}