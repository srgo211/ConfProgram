@page "/program"
@using ConfProgram.Models
@inject ConfProgram.Services.ConferenceService ConferenceService
@inject NavigationManager NavigationManager
@using Microsoft.AspNetCore.WebUtilities
@using ConfProgram.Components  @* если компоненты находятся в папке Components *@
@inject ConfProgram.Services.ConferenceService ConferenceService

<div class="program-background program-page text-white">

    <h3 class="text-center">Программа конференции</h3>

    @if (ConferenceService.Data.Rooms.Count == 0)
    {
        <p class="text-center text-muted"><em>Данные не загружены.</em></p>
    }
    else
    {
       <h4 class="text-center mt-4">Выберите комнату:</h4>

         <div class="container-fluid px-3">
        <div class="row mt-3 gx-1">
            <!-- Левая колонка: список комнат -->
            <div class="col-12 col-md-3 mb-3">
                <RoomList Rooms="ConferenceService.Data.Rooms"
                          SelectedRoom="SelectedRoom"
                          OnRoomSelected="HandleRoomSelected" />
            </div>

            <!-- Правая колонка: таблица и/или аккордеон -->
            <div class="col-12 col-md-9">
                @if (SelectedRoom is not null)
                {
                    <div class="d-none d-md-block">
                        <!-- Только на >=768px -->
                        <RoomScheduleTable Room="SelectedRoom" />
                    </div>
                    <div class="d-block d-md-none">
                        <!-- Только на <768px -->
                        <RoomScheduleTable2 Room="SelectedRoom" />
                    </div>
                }
            </div>

          
        </div>
    </div> 

    }
</div>

@code {
     private ConferenceRoom? SelectedRoom;

    private void GoToPart(string partId)
    {
        NavigationManager.NavigateTo($"/room/{partId}");
    }

    private string GetPathImg(string partId)
    {

        string pathImg = $"/images/{partId}.jpg";
        return pathImg;
    }


    protected override async Task OnInitializedAsync()
    {
        if (ConferenceService.Data.Rooms.Count == 0)
        {
            await ConferenceService.LoadDataAsync();
        }
    }


     private void HandleRoomSelected(ConferenceRoom room)
    {
        NavigateToRoom(room);
    }

    private void NavigateToRoom(ConferenceRoom room)
    {
        NavigationManager.NavigateTo($"/room/{room.Id}", replace: true);
    }
}